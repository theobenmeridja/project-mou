{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Manager = require('../Manager');\n\nvar _Manager2 = _interopRequireDefault(_Manager);\n\nvar _BigPlayButton = require('./BigPlayButton');\n\nvar _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);\n\nvar _LoadingSpinner = require('./LoadingSpinner');\n\nvar _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);\n\nvar _PosterImage = require('./PosterImage');\n\nvar _PosterImage2 = _interopRequireDefault(_PosterImage);\n\nvar _Video = require('./Video');\n\nvar _Video2 = _interopRequireDefault(_Video);\n\nvar _Bezel = require('./Bezel');\n\nvar _Bezel2 = _interopRequireDefault(_Bezel);\n\nvar _Shortcut = require('./Shortcut');\n\nvar _Shortcut2 = _interopRequireDefault(_Shortcut);\n\nvar _ControlBar = require('./control-bar/ControlBar');\n\nvar _ControlBar2 = _interopRequireDefault(_ControlBar);\n\nvar _browser = require('../utils/browser');\n\nvar browser = _interopRequireWildcard(_browser);\n\nvar _utils = require('../utils');\n\nvar _fullscreen = require('../utils/fullscreen');\n\nvar _fullscreen2 = _interopRequireDefault(_fullscreen);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  children: _propTypes2.default.any,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  fluid: _propTypes2.default.bool,\n  muted: _propTypes2.default.bool,\n  playsInline: _propTypes2.default.bool,\n  aspectRatio: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  videoId: _propTypes2.default.string,\n  startTime: _propTypes2.default.number,\n  loop: _propTypes2.default.bool,\n  autoPlay: _propTypes2.default.bool,\n  src: _propTypes2.default.string,\n  poster: _propTypes2.default.string,\n  preload: _propTypes2.default.oneOf(['auto', 'metadata', 'none']),\n  onLoadStart: _propTypes2.default.func,\n  onWaiting: _propTypes2.default.func,\n  onCanPlay: _propTypes2.default.func,\n  onCanPlayThrough: _propTypes2.default.func,\n  onPlaying: _propTypes2.default.func,\n  onEnded: _propTypes2.default.func,\n  onSeeking: _propTypes2.default.func,\n  onSeeked: _propTypes2.default.func,\n  onPlay: _propTypes2.default.func,\n  onPause: _propTypes2.default.func,\n  onProgress: _propTypes2.default.func,\n  onDurationChange: _propTypes2.default.func,\n  onError: _propTypes2.default.func,\n  onSuspend: _propTypes2.default.func,\n  onAbort: _propTypes2.default.func,\n  onEmptied: _propTypes2.default.func,\n  onStalled: _propTypes2.default.func,\n  onLoadedMetadata: _propTypes2.default.func,\n  onLoadedData: _propTypes2.default.func,\n  onTimeUpdate: _propTypes2.default.func,\n  onRateChange: _propTypes2.default.func,\n  onVolumeChange: _propTypes2.default.func,\n  store: _propTypes2.default.object\n};\nvar defaultProps = {\n  fluid: true,\n  muted: false,\n  playsInline: false,\n  aspectRatio: 'auto'\n};\n\nvar Player = function (_Component) {\n  _inherits(Player, _Component);\n\n  function Player(props) {\n    _classCallCheck(this, Player);\n\n    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, props));\n\n    _this.controlsHideTimer = null;\n    _this.video = null; // the Video component\n\n    _this.manager = new _Manager2.default(props.store);\n    _this.actions = _this.manager.getActions();\n\n    _this.manager.subscribeToPlayerStateChange(_this.handleStateChange.bind(_this));\n\n    _this.getStyle = _this.getStyle.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    _this.getChildren = _this.getChildren.bind(_this);\n    _this.handleMouseMove = (0, _utils.throttle)(_this.handleMouseMove.bind(_this), 250);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.startControlsTimer = _this.startControlsTimer.bind(_this);\n    _this.handleFullScreenChange = _this.handleFullScreenChange.bind(_this);\n    _this.handleKeyDown = _this.handleKeyDown.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.handleResize();\n      window.addEventListener('resize', this.handleResize);\n\n      _fullscreen2.default.addEventListener(this.handleFullScreenChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Remove event listener\n      window.removeEventListener('resize', this.handleResize);\n\n      _fullscreen2.default.removeEventListener(this.handleFullScreenChange);\n\n      if (this.controlsHideTimer) {\n        window.clearTimeout(this.controlsHideTimer);\n      }\n    }\n  }, {\n    key: 'getDefaultChildren',\n    value: function getDefaultChildren(props, fullProps) {\n      var _this2 = this;\n\n      return [_react2.default.createElement(_Video2.default, _extends({\n        ref: function ref(c) {\n          _this2.video = c;\n          _this2.manager.video = _this2.video;\n        },\n        key: 'video',\n        order: 0.0\n      }, fullProps)), _react2.default.createElement(_PosterImage2.default, _extends({\n        key: 'poster-image',\n        order: 1.0\n      }, props)), _react2.default.createElement(_LoadingSpinner2.default, _extends({\n        key: 'loading-spinner',\n        order: 2.0\n      }, props)), _react2.default.createElement(_Bezel2.default, _extends({\n        key: 'bezel',\n        order: 3.0\n      }, props)), _react2.default.createElement(_BigPlayButton2.default, _extends({\n        key: 'big-play-button',\n        order: 4.0\n      }, props)), _react2.default.createElement(_ControlBar2.default, _extends({\n        key: 'control-bar',\n        order: 5.0\n      }, props)), _react2.default.createElement(_Shortcut2.default, _extends({\n        key: 'shortcut',\n        order: 99.0\n      }, props))];\n    }\n  }, {\n    key: 'getChildren',\n    value: function getChildren(props) {\n      var propsWithoutChildren = _extends({}, props, {\n        children: null\n      });\n\n      var children = _react2.default.Children.toArray(this.props.children).filter(function (e) {\n        return !(0, _utils.isVideoChild)(e);\n      });\n\n      var defaultChildren = this.getDefaultChildren(propsWithoutChildren, props);\n      return (0, _utils.mergeAndSortChildren)(defaultChildren, children, propsWithoutChildren);\n    }\n  }, {\n    key: 'setWidthOrHeight',\n    value: function setWidthOrHeight(style, name, value) {\n      var styleVal = void 0;\n\n      if (typeof value === 'string') {\n        if (value === 'auto') {\n          styleVal = 'auto';\n        } else if (value.match(/\\d+%/)) {\n          styleVal = value;\n        }\n      } else if (typeof value === 'number') {\n        styleVal = value + 'px';\n      }\n\n      Object.assign(style, _defineProperty({}, name, styleVal));\n    }\n  }, {\n    key: 'getStyle',\n    value: function getStyle() {\n      var fluid = this.props.fluid;\n\n      var _manager$getState = this.manager.getState(),\n          player = _manager$getState.player;\n\n      var style = {};\n      var width = void 0;\n      var height = void 0;\n      var aspectRatio = void 0; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.props.aspectRatio !== undefined && this.props.aspectRatio !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.props.aspectRatio;\n      } else if (player.videoWidth) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = player.videoWidth + ':' + player.videoHeight;\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.props.width !== undefined) {\n        // Use any width that's been specifically set\n        width = this.props.width;\n      } else if (this.props.height !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.props.height / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = player.videoWidth || 400;\n      }\n\n      if (this.props.height !== undefined) {\n        // Use any height that's been specifically set\n        height = this.props.height;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      }\n\n      if (fluid) {\n        style.paddingTop = ratioMultiplier * 100 + '%';\n      } else {\n        // If Width contains \"auto\", set \"auto\" in style\n        this.setWidthOrHeight(style, 'width', width);\n        this.setWidthOrHeight(style, 'height', height);\n      }\n\n      return style;\n    } // get redux state\n    // { player, operation }\n\n  }, {\n    key: 'getState',\n    value: function getState() {\n      return this.manager.getState();\n    } // get playback rate\n\n  }, {\n    key: 'play',\n    // play the video\n    value: function play() {\n      this.video.play();\n    } // pause the video\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.video.pause();\n    } // Change the video source and re-load the video:\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.video.load();\n    } // Add a new text track to the video\n\n  }, {\n    key: 'addTextTrack',\n    value: function addTextTrack() {\n      var _video;\n\n      (_video = this.video).addTextTrack.apply(_video, arguments);\n    } // Check if your browser can play different types of video:\n\n  }, {\n    key: 'canPlayType',\n    value: function canPlayType() {\n      var _video2;\n\n      (_video2 = this.video).canPlayType.apply(_video2, arguments);\n    } // seek video by time\n\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this.video.seek(time);\n    } // jump forward x seconds\n\n  }, {\n    key: 'forward',\n    value: function forward(seconds) {\n      this.video.forward(seconds);\n    } // jump back x seconds\n\n  }, {\n    key: 'replay',\n    value: function replay(seconds) {\n      this.video.replay(seconds);\n    } // enter or exist full screen\n\n  }, {\n    key: 'toggleFullscreen',\n    value: function toggleFullscreen() {\n      this.video.toggleFullscreen();\n    } // subscribe to player state change\n\n  }, {\n    key: 'subscribeToStateChange',\n    value: function subscribeToStateChange(listener) {\n      return this.manager.subscribeToPlayerStateChange(listener);\n    } // player resize\n\n  }, {\n    key: 'handleResize',\n    value: function handleResize() {}\n  }, {\n    key: 'handleFullScreenChange',\n    value: function handleFullScreenChange() {\n      this.actions.handleFullscreenChange(_fullscreen2.default.isFullscreen);\n    }\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown() {\n      this.startControlsTimer();\n    }\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove() {\n      this.startControlsTimer();\n    }\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown() {\n      this.startControlsTimer();\n    }\n  }, {\n    key: 'startControlsTimer',\n    value: function startControlsTimer() {\n      var _this3 = this;\n\n      this.actions.userActivate(true);\n      clearTimeout(this.controlsHideTimer);\n      this.controlsHideTimer = setTimeout(function () {\n        _this3.actions.userActivate(false);\n      }, 3000);\n    }\n  }, {\n    key: 'handleStateChange',\n    value: function handleStateChange(state, prevState) {\n      if (state.isFullscreen !== prevState.isFullscreen) {\n        this.handleResize();\n      }\n\n      this.forceUpdate(); // re-render\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      this.actions.activate(true);\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur() {\n      this.actions.activate(false);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var fluid = this.props.fluid;\n\n      var _manager$getState2 = this.manager.getState(),\n          player = _manager$getState2.player;\n\n      var paused = player.paused,\n          hasStarted = player.hasStarted,\n          waiting = player.waiting,\n          seeking = player.seeking,\n          isFullscreen = player.isFullscreen,\n          userActivity = player.userActivity;\n\n      var props = _extends({}, this.props, {\n        player: player,\n        actions: this.actions,\n        manager: this.manager,\n        store: this.manager.store,\n        video: this.video ? this.video.video : null\n      });\n\n      var children = this.getChildren(props);\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)({\n          'video-react-controls-enabled': true,\n          'video-react-has-started': hasStarted,\n          'video-react-paused': paused,\n          'video-react-playing': !paused,\n          'video-react-waiting': waiting,\n          'video-react-seeking': seeking,\n          'video-react-fluid': fluid,\n          'video-react-fullscreen': isFullscreen,\n          'video-react-user-inactive': !userActivity,\n          'video-react-user-active': userActivity,\n          'video-react-workinghover': !browser.IS_IOS\n        }, 'video-react', this.props.className),\n        style: this.getStyle(),\n        ref: function ref(c) {\n          _this4.manager.rootElement = c;\n        },\n        role: 'region',\n        onTouchStart: this.handleMouseDown,\n        onMouseDown: this.handleMouseDown,\n        onMouseMove: this.handleMouseMove,\n        onKeyDown: this.handleKeyDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: '-1'\n      }, children);\n    }\n  }, {\n    key: 'playbackRate',\n    get: function get() {\n      return this.video.playbackRate;\n    } // set playback rate\n    // speed of video\n    ,\n    set: function set(rate) {\n      this.video.playbackRate = rate;\n    }\n  }, {\n    key: 'muted',\n    get: function get() {\n      return this.video.muted;\n    },\n    set: function set(val) {\n      this.video.muted = val;\n    }\n  }, {\n    key: 'volume',\n    get: function get() {\n      return this.video.volume;\n    },\n    set: function set(val) {\n      this.video.volume = val;\n    } // video width\n\n  }, {\n    key: 'videoWidth',\n    get: function get() {\n      return this.video.videoWidth;\n    } // video height\n\n  }, {\n    key: 'videoHeight',\n    get: function get() {\n      return this.video.videoHeight;\n    }\n  }]);\n\n  return Player;\n}(_react.Component);\n\nexports.default = Player;\nPlayer.contextTypes = {\n  store: _propTypes2.default.object\n};\nPlayer.propTypes = propTypes;\nPlayer.defaultProps = defaultProps;\nPlayer.displayName = 'Player';","map":null,"metadata":{},"sourceType":"script"}