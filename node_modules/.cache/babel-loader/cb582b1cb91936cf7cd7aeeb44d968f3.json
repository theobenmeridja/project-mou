{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = LoadProgressBar;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = {\n  duration: _propTypes2.default.number,\n  buffered: _propTypes2.default.object,\n  className: _propTypes2.default.string\n}; // Shows load progress\n\nfunction LoadProgressBar(_ref) {\n  var buffered = _ref.buffered,\n      duration = _ref.duration,\n      className = _ref.className;\n\n  if (!buffered || !buffered.length) {\n    return null;\n  }\n\n  var bufferedEnd = buffered.end(buffered.length - 1);\n  var style = {};\n\n  if (bufferedEnd > duration) {\n    bufferedEnd = duration;\n  } // get the percent width of a time compared to the total end\n\n\n  function percentify(time, end) {\n    var percent = time / end || 0; // no NaN\n\n    return (percent >= 1 ? 1 : percent) * 100 + '%';\n  } // the width of the progress bar\n\n\n  style.width = percentify(bufferedEnd, duration);\n  var parts = []; // add child elements to represent the individual buffered time ranges\n\n  for (var i = 0; i < buffered.length; i++) {\n    var start = buffered.start(i);\n    var end = buffered.end(i); // set the percent based on the width of the progress bar (bufferedEnd)\n\n    var part = _react2.default.createElement('div', {\n      style: {\n        left: percentify(start, bufferedEnd),\n        width: percentify(end - start, bufferedEnd)\n      },\n      key: 'part-' + i\n    });\n\n    parts.push(part);\n  }\n\n  if (parts.length === 0) {\n    parts = null;\n  }\n\n  return _react2.default.createElement('div', {\n    style: style,\n    className: (0, _classnames2.default)('video-react-load-progress', className)\n  }, _react2.default.createElement('span', {\n    className: 'video-react-control-text'\n  }, _react2.default.createElement('span', null, 'Loaded'), ': 0%'), parts);\n}\n\nLoadProgressBar.propTypes = propTypes;\nLoadProgressBar.displayName = 'LoadProgressBar';","map":null,"metadata":{},"sourceType":"script"}