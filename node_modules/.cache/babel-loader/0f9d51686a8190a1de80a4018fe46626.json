{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PopupButton = require('../popup/PopupButton');\n\nvar _PopupButton2 = _interopRequireDefault(_PopupButton);\n\nvar _VolumeBar = require('../volume-control/VolumeBar');\n\nvar _VolumeBar2 = _interopRequireDefault(_VolumeBar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  player: _propTypes2.default.object,\n  actions: _propTypes2.default.object,\n  vertical: _propTypes2.default.bool,\n  className: _propTypes2.default.string,\n  alwaysShowVolume: _propTypes2.default.bool\n};\nvar defaultProps = {\n  vertical: false\n};\n\nvar VolumeMenuButton = function (_Component) {\n  _inherits(VolumeMenuButton, _Component);\n\n  function VolumeMenuButton(props, context) {\n    _classCallCheck(this, VolumeMenuButton);\n\n    var _this = _possibleConstructorReturn(this, (VolumeMenuButton.__proto__ || Object.getPrototypeOf(VolumeMenuButton)).call(this, props, context));\n\n    _this.state = {\n      active: false\n    };\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(VolumeMenuButton, [{\n    key: 'handleClick',\n    value: function handleClick() {\n      var _props = this.props,\n          player = _props.player,\n          actions = _props.actions;\n      actions.mute(!player.muted);\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      this.setState({\n        active: true\n      });\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur() {\n      this.setState({\n        active: false\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          vertical = _props2.vertical,\n          player = _props2.player,\n          className = _props2.className;\n      var inline = !vertical;\n      var level = this.volumeLevel;\n      return _react2.default.createElement(_PopupButton2.default, {\n        className: (0, _classnames2.default)(className, {\n          'video-react-volume-menu-button-vertical': vertical,\n          'video-react-volume-menu-button-horizontal': !vertical,\n          'video-react-vol-muted': player.muted,\n          'video-react-vol-0': level === 0 && !player.muted,\n          'video-react-vol-1': level === 1,\n          'video-react-vol-2': level === 2,\n          'video-react-vol-3': level === 3,\n          'video-react-slider-active': this.props.alwaysShowVolume || this.state.active,\n          'video-react-lock-showing': this.props.alwaysShowVolume || this.state.active\n        }, 'video-react-volume-menu-button'),\n        onClick: this.handleClick,\n        inline: inline\n      }, _react2.default.createElement(_VolumeBar2.default, _extends({\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      }, this.props)));\n    }\n  }, {\n    key: 'volumeLevel',\n    get: function get() {\n      var _props$player = this.props.player,\n          volume = _props$player.volume,\n          muted = _props$player.muted;\n      var level = 3;\n\n      if (volume === 0 || muted) {\n        level = 0;\n      } else if (volume < 0.33) {\n        level = 1;\n      } else if (volume < 0.67) {\n        level = 2;\n      }\n\n      return level;\n    }\n  }]);\n\n  return VolumeMenuButton;\n}(_react.Component);\n\nVolumeMenuButton.propTypes = propTypes;\nVolumeMenuButton.defaultProps = defaultProps;\nVolumeMenuButton.displayName = 'VolumeMenuButton';\nexports.default = VolumeMenuButton;","map":null,"metadata":{},"sourceType":"script"}